<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.rldk2002.bookstore.book.mapper.BookMapper">

    <insert id="mergeBookcart">
        MERGE INTO BOOK_CART B
            USING DUAL
            ON (
                B.MEMBER_NO = #{memberNo} AND
                B.BOOK_ITEMID = #{itemId}
            )
        WHEN MATCHED THEN
            UPDATE SET
                B.BOOKCART_COUNT = B.BOOKCART_COUNT + #{count},
                B.BOOKCART_TIMESTAMP = sysdate
        WHEN NOT MATCHED THEN
            INSERT (MEMBER_NO, BOOK_ITEMID, BOOKCART_COUNT, BOOKCART_TIMESTAMP)
            VALUES (#{memberNo}, #{itemId}, #{count}, sysdate)
    </insert>
    
    <update id="updateBookcart">
        UPDATE BOOK_CART
        SET
            BOOKCART_COUNT = #{count}
        WHERE
            MEMBER_NO = #{memberNo} AND
            BOOK_ITEMID = #{itemId}
    </update>
    
    <select id="selectBookcart" resultType="BookCart">
        SELECT
            MEMBER_NO as memberNo,
            BOOK_ITEMID as itemId,
            BOOKCART_COUNT as count,
            BOOKCART_TIMESTAMP as timestamp
        FROM
            BOOK_CART
        WHERE
            MEMBER_NO = #{memberNo}
        ORDER BY
            BOOKCART_TIMESTAMP DESC
    </select>
    
    <delete id="deleteBookCart">
        DELETE FROM BOOK_CART
        WHERE
            MEMBER_NO = #{memberNo} AND
            BOOK_ITEMID = #{itemId}
    </delete>
    
    <insert id="mergeBookLike">
        MERGE INTO BOOK_LIKE B
            USING DUAL
            ON (
                B.MEMBER_NO = #{memberNo} AND
                B.BOOK_ITEMID = #{itemId}
            )
        WHEN MATCHED THEN
            UPDATE SET
                B.BOOKLIKE_TIMESTAMP = sysdate
            DELETE WHERE
                B.MEMBER_NO = #{memberNo} AND
                B.BOOK_ITEMID = #{itemId}
        WHEN NOT MATCHED THEN
            INSERT (MEMBER_NO, BOOK_ITEMID, BOOKLIKE_TIMESTAMP)
            VALUES (#{memberNo}, #{itemId}, sysdate)
    </insert>
    
    <select id="selectBookLike" resultType="BookLike">
        SELECT
            MEMBER_NO as memberNo,
            BOOK_ITEMID as itemId,
            BOOKLIKE_TIMESTAMP as timestamp
        FROM
            BOOK_LIKE
        WHERE
            MEMBER_NO = #{memberNo} AND
            BOOK_ITEMID = #{itemId}
    </select>
    
    <resultMap id="BookReviewResultMap" type="BookReview">
        <id column="BOOKREVIEW_NO" property="no" />
        <result column="BOOK_ITEMID" property="itemId" />
        <result column="MEMBER_NO" property="writerNo" />
        <result column="MEMBER_NAME" property="writerName" />
        <result column="BOOKREVIEW_CONTENT" property="content" />
        <result column="BOOKREVIEW_STAR_RATING" property="starRating" />
        <result column="BOOKREVIEW_WRITE_DATE" property="writeDate" />
    </resultMap>
    
    <insert id="mergeBookReview">
        MERGE INTO BOOK_REVIEW R
            USING DUAL
            ON (
                R.MEMBER_NO = #{writerNo} AND
                R.BOOK_ITEMID = #{itemId}
            )
        WHEN MATCHED THEN
            UPDATE SET
                R.BOOKREVIEW_CONTENT = #{content},
                R.BOOKREVIEW_STAR_RATING = #{starRating}
        WHEN NOT MATCHED THEN
            INSERT (
                BOOKREVIEW_NO,
                BOOKREVIEW_CONTENT,
                BOOKREVIEW_STAR_RATING,
                BOOKREVIEW_WRITE_DATE,
                BOOK_ITEMID,
                MEMBER_NO
            )
            VALUES (
                #{no},
                #{content},
                #{starRating},
                sysdate,
                #{itemId},
                #{writerNo}
           )
    </insert>
    
    <select id="selectBookReview" resultMap="BookReviewResultMap">
        SELECT
            A.BOOKREVIEW_NO,
            A.BOOK_ITEMID,
            A.MEMBER_NO,
            B.MEMBER_NAME,
            A.BOOKREVIEW_CONTENT,
            A.BOOKREVIEW_STAR_RATING,
            A.BOOKREVIEW_WRITE_DATE
        FROM
            BOOK_REVIEW A, MEMBER B
        <where>
            A.MEMBER_NO = B.MEMBER_NO
            <if test="writerNo neq null">
                AND A.MEMBER_NO = #{writerNo}
            </if>
            <if test="itemId neq null">
                AND A.BOOK_ITEMID = #{itemId}
            </if>
        </where>
    </select>
    
    <delete id="deleteBookReview">
        DELETE FROM BOOK_REVIEW
        <where>
            <if test="writerNo neq null">
                AND MEMBER_NO = #{writerNo}
            </if>
            <if test="itemId neq null">
                AND BOOK_ITEMID = #{itemId}
            </if>
        </where>
    </delete>
    
</mapper>